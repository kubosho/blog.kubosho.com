name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  TZ: 'Asia/Tokyo'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: 'npm'
          node-version: 20

      - name: Install modules
        run: npm ci

      - name: Run lints
        run: |
          npm run lint:script
          npm run lint:style
          npm run lint:markup

  check:
    defaults:
      run:
        working-directory: client

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: 'npm'
          node-version: 20

      - name: Install modules
        run: npm ci

      - name: Check TypeScript code
        run: |
          npx astro sync
          npm run check:ts

      - name: Check formatting
        run: npm run check:format

  test:
    defaults:
      run:
        working-directory: client

    runs-on: ubuntu-latest

    needs: [lint, check]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: 'npm'
          node-version: 20

      - name: Install modules
        run: npm ci

      - name: Run testing
        run: npm test

  e2e-test:
    defaults:
      run:
        working-directory: client

    env:
      PLAYWRIGHT_VERSION: null

    runs-on: ubuntu-latest

    timeout-minutes: 60

    needs: [lint, check]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: 'npm'
          node-version: 20

      - name: Get Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(jq '.devDependencies["@playwright/test"]' package.json -r)" >> $GITHUB_ENV

      - name: Cache Playwright Browsers
        id: cache-playwright-browsers
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          key: playwright-browsers-linux-${{ env.PLAYWRIGHT_VERSION }}
          path: ~/.cache/ms-playwright

      - name: Install Playwright system dependencies
        if: steps.cache-playwright-browsers.outputs.cache-hit == 'true'
        run: npx playwright install-deps

      - name: Install Playwright with browser and system dependencies
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Install modules
        run: npm ci

      - name: Run E2E tests
        run: npm run test:e2e

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
