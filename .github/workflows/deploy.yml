name: Deploy Blog

on:
  push:
    branches:
      - master
  repository_dispatch:
    types: [update_entry]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Install modules
        run: yarn install
      - name: Build application
        run: yarn build
        env:
          X_MICROCMS_API_KEY: ${{ secrets.X_MICROCMS_API_KEY }}
          X_MICROCEMS_SUB_DOMAIN: ${{ secrets.X_MICROCEMS_SUB_DOMAIN }}
          X_MICROCMS_API_NAME: ${{ secrets.X_MICROCMS_API_NAME }}
      - name: Deploy to S3
        run: aws s3 sync ./dist/ s3://${{ secrets.S3_BUCKET_ID }}
      - name: Create CloudFront invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
