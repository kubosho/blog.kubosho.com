---
import { getCollection } from 'astro:content';

import { pathList } from '../../../constants/path_list';
import EntryList from '../../app/components/EntryList.astro';
import { getSortedEntries } from '../../app/entry/get_sorted_entries';
import BlogShell from '../../app/layouts/BlogShell.astro';
import { retrieveTranslation } from '../../app/locales/i18n';

import './Category.css';

export async function getStaticPaths() {
  const entries = await getCollection('entries');
  const categories = entries.flatMap((entry) => entry.data.categories).filter((category) => category != null);
  const filteredCategories = Array.from(new Set(categories));

  return filteredCategories.map((category) => {
    return {
      params: { category },
      props: { category },
    };
  });
}

const { category } = Astro.props;

const title = retrieveTranslation('categories.headings.entryList', { category });
const webSiteTitle = retrieveTranslation('website.title');
const description = retrieveTranslation('categories.description', { category, webSiteTitle });
const pagePath = `${pathList.categories}/${category}`;

const entries = (await getSortedEntries()).filter((entry) => entry.data.categories?.find((item) => item === category));
---

<BlogShell pageTitle={title} pageDescription={description} pagePath={pagePath}>
  <div class="Category">
    <h2>{retrieveTranslation('categories.headings.entryList', { category })}</h2>
    <EntryList entries={entries} />
  </div>
</BlogShell>
