---
import { getCollection } from 'astro:content';

import EntryList from '../../components/EntryList.astro';
import { pathList } from '../../../constants/path_list';
import { getSortedEntries } from '../../entry/get_sorted_entries';
import BlogShell from '../../layouts/BlogShell.astro';
import { retrieveTranslation } from '../../locales/i18n';

import './Tag.css';

export async function getStaticPaths() {
  const entries = await getCollection('entries');
  const tags = entries.flatMap((entry) => entry.data.tags).filter((tag) => tag != null);
  const filteredTags = Array.from(new Set(tags));

  return filteredTags.map((tag) => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;

const title = retrieveTranslation('tags.headings.entryList', { tag });
const webSiteTitle = retrieveTranslation('website.title');
const description = retrieveTranslation('tags.description', { tag, webSiteTitle });
const pagePath = `${pathList.tags}/${tag}`;

const entries = (await getSortedEntries()).filter((entry) => entry.data.tags?.find((item) => item === tag));
---

<BlogShell pageTitle={title} pageDescription={description} pagePath={pagePath}>
  <div class="Tag">
    <h2>{retrieveTranslation('tags.headings.entryList', { tag })}</h2>
    <EntryList entries={entries} />
  </div>
</BlogShell>
