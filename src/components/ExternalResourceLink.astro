---
import { pathList } from '../../constants/path_list';
import { ASSETS_URL, FAVICON_URL } from '../../constants/site_data';
import { retrieveTranslation } from '../features/locales/i18n';

interface Props {
  canonicalUrl: string;
}

const { canonicalUrl } = Astro.props;

const webSiteTitle = retrieveTranslation('website.title');
---

<link rel="dns-prefetch" href={ASSETS_URL} />
<link rel="preload" as="style" href="/assets/styles/color_scheme.css" />

<link rel="canonical" href={canonicalUrl} />

<link rel="apple-touch-icon" href={FAVICON_URL} />
<link rel="icon" type="image/png" href={FAVICON_URL} />

<link rel="alternate" type="application/atom+xml" href={pathList.feed} title={webSiteTitle} />

<link rel="stylesheet" href="/assets/styles/foundation.css" />
<link rel="stylesheet" href="/assets/styles/variables.css" />
<link rel="stylesheet" href="/assets/styles/main.css" />
<link rel="stylesheet" href="/assets/styles/twitter_tweet.css" />

<script>
  import { parse } from 'valibot';

  import { initialDatalayer } from '../features/tracking/dataLayer';
  import { GTM_URL } from '../features/tracking/gtmData';
  import { optoutResponseSchema } from '../features/tracking/optoutApiValidationSchema';

  const res = await fetch('/api/optout', { method: 'GET' });
  const body = await res.json();
  const { enabled } = parse(optoutResponseSchema, body);

  if (!enabled) {
    const script = document.createElement('script');
    script.defer = true;
    script.src = GTM_URL;
    document.head.appendChild(script);

    initialDatalayer();
  }
</script>
